[project]
name = "carla-mcp-server"
version = "0.1.0"
description = "Model Context Protocol server for complete control over the Carla audio plugin host"
readme = "README.md"
requires-python = ">=3.12.0"
authors = [
    {name = "Carla MCP Server Contributors"}
]
license = {text = "GPL-2.0-or-later"}
keywords = ["audio", "mcp", "carla", "plugins", "vst", "lv2"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp>=0.1.0",
    "PyQt5>=5.15.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "psutil>=5.8.0",
    "asyncio-mqtt>=0.10.0",
    "aiofiles>=0.8.0",
    "pyyaml>=5.4.0",
    "python-dotenv>=0.19.0",
    "pytest>=8.4.2",
]

[project.urls]
Homepage = "https://github.com/carla-mcp/carla-mcp-server"
Repository = "https://github.com/carla-mcp/carla-mcp-server"
Issues = "https://github.com/carla-mcp/carla-mcp-server/issues"
Documentation = "https://carla-mcp.readthedocs.io"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "tests",
    "docs",
    ".claude",
    ".serena",
    "*.md",
    "*.sh",
    "*.nix",
    "requirements*.txt",
    "uv.lock",
    ".python-version"
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["carla_mcp_server"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["carla_mcp_server"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
